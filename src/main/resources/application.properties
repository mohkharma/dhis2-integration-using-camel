# Greeting message
greeting.message=hello

# Quarkus HTTP configuration
quarkus.http.port=8080

# Quarkus logging configuration
quarkus.log.level=ERROR


# Custom application properties for DHIS2 API
dhis2.api.baseApiUrl=
dhis2.api.token=
dhis2.api.username=
dhis2.api.password=





quarkus.datasource.db-kind = h2
quarkus.datasource.username = h2
quarkus.datasource.password = h2
quarkus.datasource.jdbc.url = jdbc:h2:mem:db;DB_CLOSE_DELAY=-1

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=drop-and-create

query=select c from Contact c



#Enable Camel tracing
camel.debug.enabled=true
quarkus.naming.enable-jndi=true

#Add the following properties to adjust the logging levels for Camel components
quarkus.log.category."org.apache.camel".level=DEBUG
quarkus.log.category."org.apache.camel.component".level=DEBUG
quarkus.log.category."com.integration.route".level=DEBUG

#Quarkus will then expose metrics at /q/metrics, which you can scrape with Prometheus and visualize with Grafana.
quarkus.metrics.enabled=true

#To trace HTTP requests and responses in Quarkus, you can use the quarkus-resteasy extension for logging REST interactions:
quarkus.http.access-log.enabled=true
quarkus.http.access-log.pattern=%h %l %u %t &quot;%r&quot; %s %b